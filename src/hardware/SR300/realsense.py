# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_realsense', [dirname(__file__)])
        except ImportError:
            import _realsense
            return _realsense
        if fp is not None:
            try:
                _mod = imp.load_module('_realsense', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _realsense = swig_import_helper()
    del swig_import_helper
else:
    import _realsense
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0


class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _realsense.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _realsense.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _realsense.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _realsense.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _realsense.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _realsense.SwigPyIterator_equal(self, x)

    def copy(self):
        return _realsense.SwigPyIterator_copy(self)

    def next(self):
        return _realsense.SwigPyIterator_next(self)

    def __next__(self):
        return _realsense.SwigPyIterator___next__(self)

    def previous(self):
        return _realsense.SwigPyIterator_previous(self)

    def advance(self, n):
        return _realsense.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _realsense.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _realsense.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _realsense.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _realsense.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _realsense.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _realsense.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _realsense.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


_realsense.RS_API_MAJOR_VERSION_swigconstant(_realsense)
RS_API_MAJOR_VERSION = _realsense.RS_API_MAJOR_VERSION

_realsense.RS_API_MINOR_VERSION_swigconstant(_realsense)
RS_API_MINOR_VERSION = _realsense.RS_API_MINOR_VERSION

_realsense.RS_API_PATCH_VERSION_swigconstant(_realsense)
RS_API_PATCH_VERSION = _realsense.RS_API_PATCH_VERSION

_realsense.RS_API_VERSION_swigconstant(_realsense)
RS_API_VERSION = _realsense.RS_API_VERSION

_realsense.RS_API_VERSION_STR_swigconstant(_realsense)
RS_API_VERSION_STR = _realsense.RS_API_VERSION_STR

_realsense.RS_STREAM_DEPTH_swigconstant(_realsense)
RS_STREAM_DEPTH = _realsense.RS_STREAM_DEPTH

_realsense.RS_STREAM_COLOR_swigconstant(_realsense)
RS_STREAM_COLOR = _realsense.RS_STREAM_COLOR

_realsense.RS_STREAM_INFRARED_swigconstant(_realsense)
RS_STREAM_INFRARED = _realsense.RS_STREAM_INFRARED

_realsense.RS_STREAM_INFRARED2_swigconstant(_realsense)
RS_STREAM_INFRARED2 = _realsense.RS_STREAM_INFRARED2

_realsense.RS_STREAM_FISHEYE_swigconstant(_realsense)
RS_STREAM_FISHEYE = _realsense.RS_STREAM_FISHEYE

_realsense.RS_STREAM_POINTS_swigconstant(_realsense)
RS_STREAM_POINTS = _realsense.RS_STREAM_POINTS

_realsense.RS_STREAM_RECTIFIED_COLOR_swigconstant(_realsense)
RS_STREAM_RECTIFIED_COLOR = _realsense.RS_STREAM_RECTIFIED_COLOR

_realsense.RS_STREAM_COLOR_ALIGNED_TO_DEPTH_swigconstant(_realsense)
RS_STREAM_COLOR_ALIGNED_TO_DEPTH = _realsense.RS_STREAM_COLOR_ALIGNED_TO_DEPTH

_realsense.RS_STREAM_INFRARED2_ALIGNED_TO_DEPTH_swigconstant(_realsense)
RS_STREAM_INFRARED2_ALIGNED_TO_DEPTH = _realsense.RS_STREAM_INFRARED2_ALIGNED_TO_DEPTH

_realsense.RS_STREAM_DEPTH_ALIGNED_TO_COLOR_swigconstant(_realsense)
RS_STREAM_DEPTH_ALIGNED_TO_COLOR = _realsense.RS_STREAM_DEPTH_ALIGNED_TO_COLOR

_realsense.RS_STREAM_DEPTH_ALIGNED_TO_RECTIFIED_COLOR_swigconstant(_realsense)
RS_STREAM_DEPTH_ALIGNED_TO_RECTIFIED_COLOR = _realsense.RS_STREAM_DEPTH_ALIGNED_TO_RECTIFIED_COLOR

_realsense.RS_STREAM_DEPTH_ALIGNED_TO_INFRARED2_swigconstant(_realsense)
RS_STREAM_DEPTH_ALIGNED_TO_INFRARED2 = _realsense.RS_STREAM_DEPTH_ALIGNED_TO_INFRARED2

_realsense.RS_STREAM_COUNT_swigconstant(_realsense)
RS_STREAM_COUNT = _realsense.RS_STREAM_COUNT

_realsense.RS_FORMAT_ANY_swigconstant(_realsense)
RS_FORMAT_ANY = _realsense.RS_FORMAT_ANY

_realsense.RS_FORMAT_Z16_swigconstant(_realsense)
RS_FORMAT_Z16 = _realsense.RS_FORMAT_Z16

_realsense.RS_FORMAT_DISPARITY16_swigconstant(_realsense)
RS_FORMAT_DISPARITY16 = _realsense.RS_FORMAT_DISPARITY16

_realsense.RS_FORMAT_XYZ32F_swigconstant(_realsense)
RS_FORMAT_XYZ32F = _realsense.RS_FORMAT_XYZ32F

_realsense.RS_FORMAT_YUYV_swigconstant(_realsense)
RS_FORMAT_YUYV = _realsense.RS_FORMAT_YUYV

_realsense.RS_FORMAT_RGB8_swigconstant(_realsense)
RS_FORMAT_RGB8 = _realsense.RS_FORMAT_RGB8

_realsense.RS_FORMAT_BGR8_swigconstant(_realsense)
RS_FORMAT_BGR8 = _realsense.RS_FORMAT_BGR8

_realsense.RS_FORMAT_RGBA8_swigconstant(_realsense)
RS_FORMAT_RGBA8 = _realsense.RS_FORMAT_RGBA8

_realsense.RS_FORMAT_BGRA8_swigconstant(_realsense)
RS_FORMAT_BGRA8 = _realsense.RS_FORMAT_BGRA8

_realsense.RS_FORMAT_Y8_swigconstant(_realsense)
RS_FORMAT_Y8 = _realsense.RS_FORMAT_Y8

_realsense.RS_FORMAT_Y16_swigconstant(_realsense)
RS_FORMAT_Y16 = _realsense.RS_FORMAT_Y16

_realsense.RS_FORMAT_RAW10_swigconstant(_realsense)
RS_FORMAT_RAW10 = _realsense.RS_FORMAT_RAW10

_realsense.RS_FORMAT_RAW16_swigconstant(_realsense)
RS_FORMAT_RAW16 = _realsense.RS_FORMAT_RAW16

_realsense.RS_FORMAT_RAW8_swigconstant(_realsense)
RS_FORMAT_RAW8 = _realsense.RS_FORMAT_RAW8

_realsense.RS_FORMAT_COUNT_swigconstant(_realsense)
RS_FORMAT_COUNT = _realsense.RS_FORMAT_COUNT

_realsense.RS_OUTPUT_BUFFER_FORMAT_CONTINUOUS_swigconstant(_realsense)
RS_OUTPUT_BUFFER_FORMAT_CONTINUOUS = _realsense.RS_OUTPUT_BUFFER_FORMAT_CONTINUOUS

_realsense.RS_OUTPUT_BUFFER_FORMAT_NATIVE_swigconstant(_realsense)
RS_OUTPUT_BUFFER_FORMAT_NATIVE = _realsense.RS_OUTPUT_BUFFER_FORMAT_NATIVE

_realsense.RS_OUTPUT_BUFFER_FORMAT_COUNT_swigconstant(_realsense)
RS_OUTPUT_BUFFER_FORMAT_COUNT = _realsense.RS_OUTPUT_BUFFER_FORMAT_COUNT

_realsense.RS_PRESET_BEST_QUALITY_swigconstant(_realsense)
RS_PRESET_BEST_QUALITY = _realsense.RS_PRESET_BEST_QUALITY

_realsense.RS_PRESET_LARGEST_IMAGE_swigconstant(_realsense)
RS_PRESET_LARGEST_IMAGE = _realsense.RS_PRESET_LARGEST_IMAGE

_realsense.RS_PRESET_HIGHEST_FRAMERATE_swigconstant(_realsense)
RS_PRESET_HIGHEST_FRAMERATE = _realsense.RS_PRESET_HIGHEST_FRAMERATE

_realsense.RS_PRESET_COUNT_swigconstant(_realsense)
RS_PRESET_COUNT = _realsense.RS_PRESET_COUNT

_realsense.RS_SOURCE_VIDEO_swigconstant(_realsense)
RS_SOURCE_VIDEO = _realsense.RS_SOURCE_VIDEO

_realsense.RS_SOURCE_MOTION_TRACKING_swigconstant(_realsense)
RS_SOURCE_MOTION_TRACKING = _realsense.RS_SOURCE_MOTION_TRACKING

_realsense.RS_SOURCE_ALL_swigconstant(_realsense)
RS_SOURCE_ALL = _realsense.RS_SOURCE_ALL

_realsense.RS_SOURCE_COUNT_swigconstant(_realsense)
RS_SOURCE_COUNT = _realsense.RS_SOURCE_COUNT

_realsense.RS_DISTORTION_NONE_swigconstant(_realsense)
RS_DISTORTION_NONE = _realsense.RS_DISTORTION_NONE

_realsense.RS_DISTORTION_MODIFIED_BROWN_CONRADY_swigconstant(_realsense)
RS_DISTORTION_MODIFIED_BROWN_CONRADY = _realsense.RS_DISTORTION_MODIFIED_BROWN_CONRADY

_realsense.RS_DISTORTION_INVERSE_BROWN_CONRADY_swigconstant(_realsense)
RS_DISTORTION_INVERSE_BROWN_CONRADY = _realsense.RS_DISTORTION_INVERSE_BROWN_CONRADY

_realsense.RS_DISTORTION_FTHETA_swigconstant(_realsense)
RS_DISTORTION_FTHETA = _realsense.RS_DISTORTION_FTHETA

_realsense.RS_DISTORTION_COUNT_swigconstant(_realsense)
RS_DISTORTION_COUNT = _realsense.RS_DISTORTION_COUNT

_realsense.RS_IVCAM_PRESET_SHORT_RANGE_swigconstant(_realsense)
RS_IVCAM_PRESET_SHORT_RANGE = _realsense.RS_IVCAM_PRESET_SHORT_RANGE

_realsense.RS_IVCAM_PRESET_LONG_RANGE_swigconstant(_realsense)
RS_IVCAM_PRESET_LONG_RANGE = _realsense.RS_IVCAM_PRESET_LONG_RANGE

_realsense.RS_IVCAM_PRESET_BACKGROUND_SEGMENTATION_swigconstant(_realsense)
RS_IVCAM_PRESET_BACKGROUND_SEGMENTATION = _realsense.RS_IVCAM_PRESET_BACKGROUND_SEGMENTATION

_realsense.RS_IVCAM_PRESET_GESTURE_RECOGNITION_swigconstant(_realsense)
RS_IVCAM_PRESET_GESTURE_RECOGNITION = _realsense.RS_IVCAM_PRESET_GESTURE_RECOGNITION

_realsense.RS_IVCAM_PRESET_OBJECT_SCANNING_swigconstant(_realsense)
RS_IVCAM_PRESET_OBJECT_SCANNING = _realsense.RS_IVCAM_PRESET_OBJECT_SCANNING

_realsense.RS_IVCAM_PRESET_FACE_ANALYTICS_swigconstant(_realsense)
RS_IVCAM_PRESET_FACE_ANALYTICS = _realsense.RS_IVCAM_PRESET_FACE_ANALYTICS

_realsense.RS_IVCAM_PRESET_FACE_LOGIN_swigconstant(_realsense)
RS_IVCAM_PRESET_FACE_LOGIN = _realsense.RS_IVCAM_PRESET_FACE_LOGIN

_realsense.RS_IVCAM_PRESET_GR_CURSOR_swigconstant(_realsense)
RS_IVCAM_PRESET_GR_CURSOR = _realsense.RS_IVCAM_PRESET_GR_CURSOR

_realsense.RS_IVCAM_PRESET_DEFAULT_swigconstant(_realsense)
RS_IVCAM_PRESET_DEFAULT = _realsense.RS_IVCAM_PRESET_DEFAULT

_realsense.RS_IVCAM_PRESET_MID_RANGE_swigconstant(_realsense)
RS_IVCAM_PRESET_MID_RANGE = _realsense.RS_IVCAM_PRESET_MID_RANGE

_realsense.RS_IVCAM_PRESET_IR_ONLY_swigconstant(_realsense)
RS_IVCAM_PRESET_IR_ONLY = _realsense.RS_IVCAM_PRESET_IR_ONLY

_realsense.RS_IVCAM_PRESET_COUNT_swigconstant(_realsense)
RS_IVCAM_PRESET_COUNT = _realsense.RS_IVCAM_PRESET_COUNT

_realsense.RS_OPTION_COLOR_BACKLIGHT_COMPENSATION_swigconstant(_realsense)
RS_OPTION_COLOR_BACKLIGHT_COMPENSATION = _realsense.RS_OPTION_COLOR_BACKLIGHT_COMPENSATION

_realsense.RS_OPTION_COLOR_BRIGHTNESS_swigconstant(_realsense)
RS_OPTION_COLOR_BRIGHTNESS = _realsense.RS_OPTION_COLOR_BRIGHTNESS

_realsense.RS_OPTION_COLOR_CONTRAST_swigconstant(_realsense)
RS_OPTION_COLOR_CONTRAST = _realsense.RS_OPTION_COLOR_CONTRAST

_realsense.RS_OPTION_COLOR_EXPOSURE_swigconstant(_realsense)
RS_OPTION_COLOR_EXPOSURE = _realsense.RS_OPTION_COLOR_EXPOSURE

_realsense.RS_OPTION_COLOR_GAIN_swigconstant(_realsense)
RS_OPTION_COLOR_GAIN = _realsense.RS_OPTION_COLOR_GAIN

_realsense.RS_OPTION_COLOR_GAMMA_swigconstant(_realsense)
RS_OPTION_COLOR_GAMMA = _realsense.RS_OPTION_COLOR_GAMMA

_realsense.RS_OPTION_COLOR_HUE_swigconstant(_realsense)
RS_OPTION_COLOR_HUE = _realsense.RS_OPTION_COLOR_HUE

_realsense.RS_OPTION_COLOR_SATURATION_swigconstant(_realsense)
RS_OPTION_COLOR_SATURATION = _realsense.RS_OPTION_COLOR_SATURATION

_realsense.RS_OPTION_COLOR_SHARPNESS_swigconstant(_realsense)
RS_OPTION_COLOR_SHARPNESS = _realsense.RS_OPTION_COLOR_SHARPNESS

_realsense.RS_OPTION_COLOR_WHITE_BALANCE_swigconstant(_realsense)
RS_OPTION_COLOR_WHITE_BALANCE = _realsense.RS_OPTION_COLOR_WHITE_BALANCE

_realsense.RS_OPTION_COLOR_ENABLE_AUTO_EXPOSURE_swigconstant(_realsense)
RS_OPTION_COLOR_ENABLE_AUTO_EXPOSURE = _realsense.RS_OPTION_COLOR_ENABLE_AUTO_EXPOSURE

_realsense.RS_OPTION_COLOR_ENABLE_AUTO_WHITE_BALANCE_swigconstant(_realsense)
RS_OPTION_COLOR_ENABLE_AUTO_WHITE_BALANCE = _realsense.RS_OPTION_COLOR_ENABLE_AUTO_WHITE_BALANCE

_realsense.RS_OPTION_F200_LASER_POWER_swigconstant(_realsense)
RS_OPTION_F200_LASER_POWER = _realsense.RS_OPTION_F200_LASER_POWER

_realsense.RS_OPTION_F200_ACCURACY_swigconstant(_realsense)
RS_OPTION_F200_ACCURACY = _realsense.RS_OPTION_F200_ACCURACY

_realsense.RS_OPTION_F200_MOTION_RANGE_swigconstant(_realsense)
RS_OPTION_F200_MOTION_RANGE = _realsense.RS_OPTION_F200_MOTION_RANGE

_realsense.RS_OPTION_F200_FILTER_OPTION_swigconstant(_realsense)
RS_OPTION_F200_FILTER_OPTION = _realsense.RS_OPTION_F200_FILTER_OPTION

_realsense.RS_OPTION_F200_CONFIDENCE_THRESHOLD_swigconstant(_realsense)
RS_OPTION_F200_CONFIDENCE_THRESHOLD = _realsense.RS_OPTION_F200_CONFIDENCE_THRESHOLD

_realsense.RS_OPTION_F200_DYNAMIC_FPS_swigconstant(_realsense)
RS_OPTION_F200_DYNAMIC_FPS = _realsense.RS_OPTION_F200_DYNAMIC_FPS

_realsense.RS_OPTION_SR300_AUTO_RANGE_ENABLE_MOTION_VERSUS_RANGE_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_ENABLE_MOTION_VERSUS_RANGE = _realsense.RS_OPTION_SR300_AUTO_RANGE_ENABLE_MOTION_VERSUS_RANGE

_realsense.RS_OPTION_SR300_AUTO_RANGE_ENABLE_LASER_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_ENABLE_LASER = _realsense.RS_OPTION_SR300_AUTO_RANGE_ENABLE_LASER

_realsense.RS_OPTION_SR300_AUTO_RANGE_MIN_MOTION_VERSUS_RANGE_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_MIN_MOTION_VERSUS_RANGE = _realsense.RS_OPTION_SR300_AUTO_RANGE_MIN_MOTION_VERSUS_RANGE

_realsense.RS_OPTION_SR300_AUTO_RANGE_MAX_MOTION_VERSUS_RANGE_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_MAX_MOTION_VERSUS_RANGE = _realsense.RS_OPTION_SR300_AUTO_RANGE_MAX_MOTION_VERSUS_RANGE

_realsense.RS_OPTION_SR300_AUTO_RANGE_START_MOTION_VERSUS_RANGE_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_START_MOTION_VERSUS_RANGE = _realsense.RS_OPTION_SR300_AUTO_RANGE_START_MOTION_VERSUS_RANGE

_realsense.RS_OPTION_SR300_AUTO_RANGE_MIN_LASER_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_MIN_LASER = _realsense.RS_OPTION_SR300_AUTO_RANGE_MIN_LASER

_realsense.RS_OPTION_SR300_AUTO_RANGE_MAX_LASER_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_MAX_LASER = _realsense.RS_OPTION_SR300_AUTO_RANGE_MAX_LASER

_realsense.RS_OPTION_SR300_AUTO_RANGE_START_LASER_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_START_LASER = _realsense.RS_OPTION_SR300_AUTO_RANGE_START_LASER

_realsense.RS_OPTION_SR300_AUTO_RANGE_UPPER_THRESHOLD_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_UPPER_THRESHOLD = _realsense.RS_OPTION_SR300_AUTO_RANGE_UPPER_THRESHOLD

_realsense.RS_OPTION_SR300_AUTO_RANGE_LOWER_THRESHOLD_swigconstant(_realsense)
RS_OPTION_SR300_AUTO_RANGE_LOWER_THRESHOLD = _realsense.RS_OPTION_SR300_AUTO_RANGE_LOWER_THRESHOLD

_realsense.RS_OPTION_R200_LR_AUTO_EXPOSURE_ENABLED_swigconstant(_realsense)
RS_OPTION_R200_LR_AUTO_EXPOSURE_ENABLED = _realsense.RS_OPTION_R200_LR_AUTO_EXPOSURE_ENABLED

_realsense.RS_OPTION_R200_LR_GAIN_swigconstant(_realsense)
RS_OPTION_R200_LR_GAIN = _realsense.RS_OPTION_R200_LR_GAIN

_realsense.RS_OPTION_R200_LR_EXPOSURE_swigconstant(_realsense)
RS_OPTION_R200_LR_EXPOSURE = _realsense.RS_OPTION_R200_LR_EXPOSURE

_realsense.RS_OPTION_R200_EMITTER_ENABLED_swigconstant(_realsense)
RS_OPTION_R200_EMITTER_ENABLED = _realsense.RS_OPTION_R200_EMITTER_ENABLED

_realsense.RS_OPTION_R200_DEPTH_UNITS_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_UNITS = _realsense.RS_OPTION_R200_DEPTH_UNITS

_realsense.RS_OPTION_R200_DEPTH_CLAMP_MIN_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CLAMP_MIN = _realsense.RS_OPTION_R200_DEPTH_CLAMP_MIN

_realsense.RS_OPTION_R200_DEPTH_CLAMP_MAX_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CLAMP_MAX = _realsense.RS_OPTION_R200_DEPTH_CLAMP_MAX

_realsense.RS_OPTION_R200_DISPARITY_MULTIPLIER_swigconstant(_realsense)
RS_OPTION_R200_DISPARITY_MULTIPLIER = _realsense.RS_OPTION_R200_DISPARITY_MULTIPLIER

_realsense.RS_OPTION_R200_DISPARITY_SHIFT_swigconstant(_realsense)
RS_OPTION_R200_DISPARITY_SHIFT = _realsense.RS_OPTION_R200_DISPARITY_SHIFT

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_MEAN_INTENSITY_SET_POINT_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_MEAN_INTENSITY_SET_POINT = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_MEAN_INTENSITY_SET_POINT

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_BRIGHT_RATIO_SET_POINT_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_BRIGHT_RATIO_SET_POINT = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_BRIGHT_RATIO_SET_POINT

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_GAIN_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_KP_GAIN = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_GAIN

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_EXPOSURE_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_KP_EXPOSURE = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_EXPOSURE

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_DARK_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_KP_DARK_THRESHOLD = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_KP_DARK_THRESHOLD

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_TOP_EDGE_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_TOP_EDGE = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_TOP_EDGE

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_BOTTOM_EDGE_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_BOTTOM_EDGE = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_BOTTOM_EDGE

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_LEFT_EDGE_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_LEFT_EDGE = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_LEFT_EDGE

_realsense.RS_OPTION_R200_AUTO_EXPOSURE_RIGHT_EDGE_swigconstant(_realsense)
RS_OPTION_R200_AUTO_EXPOSURE_RIGHT_EDGE = _realsense.RS_OPTION_R200_AUTO_EXPOSURE_RIGHT_EDGE

_realsense.RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_DECREMENT_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_DECREMENT = _realsense.RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_DECREMENT

_realsense.RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_INCREMENT_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_INCREMENT = _realsense.RS_OPTION_R200_DEPTH_CONTROL_ESTIMATE_MEDIAN_INCREMENT

_realsense.RS_OPTION_R200_DEPTH_CONTROL_MEDIAN_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_MEDIAN_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_MEDIAN_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_SCORE_MINIMUM_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_SCORE_MINIMUM_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_SCORE_MINIMUM_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_SCORE_MAXIMUM_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_SCORE_MAXIMUM_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_SCORE_MAXIMUM_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_COUNT_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_COUNT_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_COUNT_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_DIFFERENCE_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_DIFFERENCE_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_TEXTURE_DIFFERENCE_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_SECOND_PEAK_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_SECOND_PEAK_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_SECOND_PEAK_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_NEIGHBOR_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_NEIGHBOR_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_NEIGHBOR_THRESHOLD

_realsense.RS_OPTION_R200_DEPTH_CONTROL_LR_THRESHOLD_swigconstant(_realsense)
RS_OPTION_R200_DEPTH_CONTROL_LR_THRESHOLD = _realsense.RS_OPTION_R200_DEPTH_CONTROL_LR_THRESHOLD

_realsense.RS_OPTION_FISHEYE_EXPOSURE_swigconstant(_realsense)
RS_OPTION_FISHEYE_EXPOSURE = _realsense.RS_OPTION_FISHEYE_EXPOSURE

_realsense.RS_OPTION_FISHEYE_GAIN_swigconstant(_realsense)
RS_OPTION_FISHEYE_GAIN = _realsense.RS_OPTION_FISHEYE_GAIN

_realsense.RS_OPTION_FISHEYE_STROBE_swigconstant(_realsense)
RS_OPTION_FISHEYE_STROBE = _realsense.RS_OPTION_FISHEYE_STROBE

_realsense.RS_OPTION_FISHEYE_EXTERNAL_TRIGGER_swigconstant(_realsense)
RS_OPTION_FISHEYE_EXTERNAL_TRIGGER = _realsense.RS_OPTION_FISHEYE_EXTERNAL_TRIGGER

_realsense.RS_OPTION_FISHEYE_ENABLE_AUTO_EXPOSURE_swigconstant(_realsense)
RS_OPTION_FISHEYE_ENABLE_AUTO_EXPOSURE = _realsense.RS_OPTION_FISHEYE_ENABLE_AUTO_EXPOSURE

_realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_MODE_swigconstant(_realsense)
RS_OPTION_FISHEYE_AUTO_EXPOSURE_MODE = _realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_MODE

_realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_ANTIFLICKER_RATE_swigconstant(_realsense)
RS_OPTION_FISHEYE_AUTO_EXPOSURE_ANTIFLICKER_RATE = _realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_ANTIFLICKER_RATE

_realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_PIXEL_SAMPLE_RATE_swigconstant(_realsense)
RS_OPTION_FISHEYE_AUTO_EXPOSURE_PIXEL_SAMPLE_RATE = _realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_PIXEL_SAMPLE_RATE

_realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_SKIP_FRAMES_swigconstant(_realsense)
RS_OPTION_FISHEYE_AUTO_EXPOSURE_SKIP_FRAMES = _realsense.RS_OPTION_FISHEYE_AUTO_EXPOSURE_SKIP_FRAMES

_realsense.RS_OPTION_FRAMES_QUEUE_SIZE_swigconstant(_realsense)
RS_OPTION_FRAMES_QUEUE_SIZE = _realsense.RS_OPTION_FRAMES_QUEUE_SIZE

_realsense.RS_OPTION_HARDWARE_LOGGER_ENABLED_swigconstant(_realsense)
RS_OPTION_HARDWARE_LOGGER_ENABLED = _realsense.RS_OPTION_HARDWARE_LOGGER_ENABLED

_realsense.RS_OPTION_TOTAL_FRAME_DROPS_swigconstant(_realsense)
RS_OPTION_TOTAL_FRAME_DROPS = _realsense.RS_OPTION_TOTAL_FRAME_DROPS

_realsense.RS_OPTION_COUNT_swigconstant(_realsense)
RS_OPTION_COUNT = _realsense.RS_OPTION_COUNT

_realsense.RS_FRAME_METADATA_ACTUAL_EXPOSURE_swigconstant(_realsense)
RS_FRAME_METADATA_ACTUAL_EXPOSURE = _realsense.RS_FRAME_METADATA_ACTUAL_EXPOSURE

_realsense.RS_FRAME_METADATA_ACTUAL_FPS_swigconstant(_realsense)
RS_FRAME_METADATA_ACTUAL_FPS = _realsense.RS_FRAME_METADATA_ACTUAL_FPS

_realsense.RS_FRAME_METADATA_COUNT_swigconstant(_realsense)
RS_FRAME_METADATA_COUNT = _realsense.RS_FRAME_METADATA_COUNT

_realsense.RS_CAPABILITIES_DEPTH_swigconstant(_realsense)
RS_CAPABILITIES_DEPTH = _realsense.RS_CAPABILITIES_DEPTH

_realsense.RS_CAPABILITIES_COLOR_swigconstant(_realsense)
RS_CAPABILITIES_COLOR = _realsense.RS_CAPABILITIES_COLOR

_realsense.RS_CAPABILITIES_INFRARED_swigconstant(_realsense)
RS_CAPABILITIES_INFRARED = _realsense.RS_CAPABILITIES_INFRARED

_realsense.RS_CAPABILITIES_INFRARED2_swigconstant(_realsense)
RS_CAPABILITIES_INFRARED2 = _realsense.RS_CAPABILITIES_INFRARED2

_realsense.RS_CAPABILITIES_FISH_EYE_swigconstant(_realsense)
RS_CAPABILITIES_FISH_EYE = _realsense.RS_CAPABILITIES_FISH_EYE

_realsense.RS_CAPABILITIES_MOTION_EVENTS_swigconstant(_realsense)
RS_CAPABILITIES_MOTION_EVENTS = _realsense.RS_CAPABILITIES_MOTION_EVENTS

_realsense.RS_CAPABILITIES_MOTION_MODULE_FW_UPDATE_swigconstant(_realsense)
RS_CAPABILITIES_MOTION_MODULE_FW_UPDATE = _realsense.RS_CAPABILITIES_MOTION_MODULE_FW_UPDATE

_realsense.RS_CAPABILITIES_ADAPTER_BOARD_swigconstant(_realsense)
RS_CAPABILITIES_ADAPTER_BOARD = _realsense.RS_CAPABILITIES_ADAPTER_BOARD

_realsense.RS_CAPABILITIES_ENUMERATION_swigconstant(_realsense)
RS_CAPABILITIES_ENUMERATION = _realsense.RS_CAPABILITIES_ENUMERATION

_realsense.RS_CAPABILITIES_COUNT_swigconstant(_realsense)
RS_CAPABILITIES_COUNT = _realsense.RS_CAPABILITIES_COUNT

_realsense.RS_BLOB_TYPE_MOTION_MODULE_FIRMWARE_UPDATE_swigconstant(_realsense)
RS_BLOB_TYPE_MOTION_MODULE_FIRMWARE_UPDATE = _realsense.RS_BLOB_TYPE_MOTION_MODULE_FIRMWARE_UPDATE

_realsense.RS_BLOB_TYPE_COUNT_swigconstant(_realsense)
RS_BLOB_TYPE_COUNT = _realsense.RS_BLOB_TYPE_COUNT

_realsense.RS_CAMERA_INFO_DEVICE_NAME_swigconstant(_realsense)
RS_CAMERA_INFO_DEVICE_NAME = _realsense.RS_CAMERA_INFO_DEVICE_NAME

_realsense.RS_CAMERA_INFO_DEVICE_SERIAL_NUMBER_swigconstant(_realsense)
RS_CAMERA_INFO_DEVICE_SERIAL_NUMBER = _realsense.RS_CAMERA_INFO_DEVICE_SERIAL_NUMBER

_realsense.RS_CAMERA_INFO_CAMERA_FIRMWARE_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_CAMERA_FIRMWARE_VERSION = _realsense.RS_CAMERA_INFO_CAMERA_FIRMWARE_VERSION

_realsense.RS_CAMERA_INFO_ADAPTER_BOARD_FIRMWARE_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_ADAPTER_BOARD_FIRMWARE_VERSION = _realsense.RS_CAMERA_INFO_ADAPTER_BOARD_FIRMWARE_VERSION

_realsense.RS_CAMERA_INFO_MOTION_MODULE_FIRMWARE_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_MOTION_MODULE_FIRMWARE_VERSION = _realsense.RS_CAMERA_INFO_MOTION_MODULE_FIRMWARE_VERSION

_realsense.RS_CAMERA_INFO_CAMERA_TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_CAMERA_TYPE = _realsense.RS_CAMERA_INFO_CAMERA_TYPE

_realsense.RS_CAMERA_INFO_OEM_ID_swigconstant(_realsense)
RS_CAMERA_INFO_OEM_ID = _realsense.RS_CAMERA_INFO_OEM_ID

_realsense.RS_CAMERA_INFO_ISP_FW_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_ISP_FW_VERSION = _realsense.RS_CAMERA_INFO_ISP_FW_VERSION

_realsense.RS_CAMERA_INFO_CONTENT_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_CONTENT_VERSION = _realsense.RS_CAMERA_INFO_CONTENT_VERSION

_realsense.RS_CAMERA_INFO_MODULE_VERSION_swigconstant(_realsense)
RS_CAMERA_INFO_MODULE_VERSION = _realsense.RS_CAMERA_INFO_MODULE_VERSION

_realsense.RS_CAMERA_INFO_IMAGER_MODEL_NUMBER_swigconstant(_realsense)
RS_CAMERA_INFO_IMAGER_MODEL_NUMBER = _realsense.RS_CAMERA_INFO_IMAGER_MODEL_NUMBER

_realsense.RS_CAMERA_INFO_BUILD_DATE_swigconstant(_realsense)
RS_CAMERA_INFO_BUILD_DATE = _realsense.RS_CAMERA_INFO_BUILD_DATE

_realsense.RS_CAMERA_INFO_CALIBRATION_DATE_swigconstant(_realsense)
RS_CAMERA_INFO_CALIBRATION_DATE = _realsense.RS_CAMERA_INFO_CALIBRATION_DATE

_realsense.RS_CAMERA_INFO_PROGRAM_DATE_swigconstant(_realsense)
RS_CAMERA_INFO_PROGRAM_DATE = _realsense.RS_CAMERA_INFO_PROGRAM_DATE

_realsense.RS_CAMERA_INFO_FOCUS_ALIGNMENT_DATE_swigconstant(_realsense)
RS_CAMERA_INFO_FOCUS_ALIGNMENT_DATE = _realsense.RS_CAMERA_INFO_FOCUS_ALIGNMENT_DATE

_realsense.RS_CAMERA_INFO_EMITTER_TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_EMITTER_TYPE = _realsense.RS_CAMERA_INFO_EMITTER_TYPE

_realsense.RS_CAMERA_INFO_FOCUS_VALUE_swigconstant(_realsense)
RS_CAMERA_INFO_FOCUS_VALUE = _realsense.RS_CAMERA_INFO_FOCUS_VALUE

_realsense.RS_CAMERA_INFO_LENS_TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_LENS_TYPE = _realsense.RS_CAMERA_INFO_LENS_TYPE

_realsense.RS_CAMERA_INFO_3RD_LENS_TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_3RD_LENS_TYPE = _realsense.RS_CAMERA_INFO_3RD_LENS_TYPE

_realsense.RS_CAMERA_INFO_LENS_COATING__TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_LENS_COATING__TYPE = _realsense.RS_CAMERA_INFO_LENS_COATING__TYPE

_realsense.RS_CAMERA_INFO_3RD_LENS_COATING_TYPE_swigconstant(_realsense)
RS_CAMERA_INFO_3RD_LENS_COATING_TYPE = _realsense.RS_CAMERA_INFO_3RD_LENS_COATING_TYPE

_realsense.RS_CAMERA_INFO_NOMINAL_BASELINE_swigconstant(_realsense)
RS_CAMERA_INFO_NOMINAL_BASELINE = _realsense.RS_CAMERA_INFO_NOMINAL_BASELINE

_realsense.RS_CAMERA_INFO_3RD_NOMINAL_BASELINE_swigconstant(_realsense)
RS_CAMERA_INFO_3RD_NOMINAL_BASELINE = _realsense.RS_CAMERA_INFO_3RD_NOMINAL_BASELINE

_realsense.RS_CAMERA_INFO_COUNT_swigconstant(_realsense)
RS_CAMERA_INFO_COUNT = _realsense.RS_CAMERA_INFO_COUNT

_realsense.RS_LOG_SEVERITY_DEBUG_swigconstant(_realsense)
RS_LOG_SEVERITY_DEBUG = _realsense.RS_LOG_SEVERITY_DEBUG

_realsense.RS_LOG_SEVERITY_INFO_swigconstant(_realsense)
RS_LOG_SEVERITY_INFO = _realsense.RS_LOG_SEVERITY_INFO

_realsense.RS_LOG_SEVERITY_WARN_swigconstant(_realsense)
RS_LOG_SEVERITY_WARN = _realsense.RS_LOG_SEVERITY_WARN

_realsense.RS_LOG_SEVERITY_ERROR_swigconstant(_realsense)
RS_LOG_SEVERITY_ERROR = _realsense.RS_LOG_SEVERITY_ERROR

_realsense.RS_LOG_SEVERITY_FATAL_swigconstant(_realsense)
RS_LOG_SEVERITY_FATAL = _realsense.RS_LOG_SEVERITY_FATAL

_realsense.RS_LOG_SEVERITY_NONE_swigconstant(_realsense)
RS_LOG_SEVERITY_NONE = _realsense.RS_LOG_SEVERITY_NONE

_realsense.RS_LOG_SEVERITY_COUNT_swigconstant(_realsense)
RS_LOG_SEVERITY_COUNT = _realsense.RS_LOG_SEVERITY_COUNT

_realsense.RS_EVENT_IMU_ACCEL_swigconstant(_realsense)
RS_EVENT_IMU_ACCEL = _realsense.RS_EVENT_IMU_ACCEL

_realsense.RS_EVENT_IMU_GYRO_swigconstant(_realsense)
RS_EVENT_IMU_GYRO = _realsense.RS_EVENT_IMU_GYRO

_realsense.RS_EVENT_IMU_DEPTH_CAM_swigconstant(_realsense)
RS_EVENT_IMU_DEPTH_CAM = _realsense.RS_EVENT_IMU_DEPTH_CAM

_realsense.RS_EVENT_IMU_MOTION_CAM_swigconstant(_realsense)
RS_EVENT_IMU_MOTION_CAM = _realsense.RS_EVENT_IMU_MOTION_CAM

_realsense.RS_EVENT_G0_SYNC_swigconstant(_realsense)
RS_EVENT_G0_SYNC = _realsense.RS_EVENT_G0_SYNC

_realsense.RS_EVENT_G1_SYNC_swigconstant(_realsense)
RS_EVENT_G1_SYNC = _realsense.RS_EVENT_G1_SYNC

_realsense.RS_EVENT_G2_SYNC_swigconstant(_realsense)
RS_EVENT_G2_SYNC = _realsense.RS_EVENT_G2_SYNC

_realsense.RS_EVENT_SOURCE_COUNT_swigconstant(_realsense)
RS_EVENT_SOURCE_COUNT = _realsense.RS_EVENT_SOURCE_COUNT

_realsense.RS_TIMESTAMP_DOMAIN_CAMERA_swigconstant(_realsense)
RS_TIMESTAMP_DOMAIN_CAMERA = _realsense.RS_TIMESTAMP_DOMAIN_CAMERA

_realsense.RS_TIMESTAMP_DOMAIN_MICROCONTROLLER_swigconstant(_realsense)
RS_TIMESTAMP_DOMAIN_MICROCONTROLLER = _realsense.RS_TIMESTAMP_DOMAIN_MICROCONTROLLER

_realsense.RS_TIMESTAMP_DOMAIN_COUNT_swigconstant(_realsense)
RS_TIMESTAMP_DOMAIN_COUNT = _realsense.RS_TIMESTAMP_DOMAIN_COUNT
class rs_intrinsics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_intrinsics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_intrinsics, name)
    __repr__ = _swig_repr
    __swig_setmethods__["width"] = _realsense.rs_intrinsics_width_set
    __swig_getmethods__["width"] = _realsense.rs_intrinsics_width_get
    if _newclass:
        width = _swig_property(_realsense.rs_intrinsics_width_get, _realsense.rs_intrinsics_width_set)
    __swig_setmethods__["height"] = _realsense.rs_intrinsics_height_set
    __swig_getmethods__["height"] = _realsense.rs_intrinsics_height_get
    if _newclass:
        height = _swig_property(_realsense.rs_intrinsics_height_get, _realsense.rs_intrinsics_height_set)
    __swig_setmethods__["ppx"] = _realsense.rs_intrinsics_ppx_set
    __swig_getmethods__["ppx"] = _realsense.rs_intrinsics_ppx_get
    if _newclass:
        ppx = _swig_property(_realsense.rs_intrinsics_ppx_get, _realsense.rs_intrinsics_ppx_set)
    __swig_setmethods__["ppy"] = _realsense.rs_intrinsics_ppy_set
    __swig_getmethods__["ppy"] = _realsense.rs_intrinsics_ppy_get
    if _newclass:
        ppy = _swig_property(_realsense.rs_intrinsics_ppy_get, _realsense.rs_intrinsics_ppy_set)
    __swig_setmethods__["fx"] = _realsense.rs_intrinsics_fx_set
    __swig_getmethods__["fx"] = _realsense.rs_intrinsics_fx_get
    if _newclass:
        fx = _swig_property(_realsense.rs_intrinsics_fx_get, _realsense.rs_intrinsics_fx_set)
    __swig_setmethods__["fy"] = _realsense.rs_intrinsics_fy_set
    __swig_getmethods__["fy"] = _realsense.rs_intrinsics_fy_get
    if _newclass:
        fy = _swig_property(_realsense.rs_intrinsics_fy_get, _realsense.rs_intrinsics_fy_set)
    __swig_setmethods__["model"] = _realsense.rs_intrinsics_model_set
    __swig_getmethods__["model"] = _realsense.rs_intrinsics_model_get
    if _newclass:
        model = _swig_property(_realsense.rs_intrinsics_model_get, _realsense.rs_intrinsics_model_set)
    __swig_setmethods__["coeffs"] = _realsense.rs_intrinsics_coeffs_set
    __swig_getmethods__["coeffs"] = _realsense.rs_intrinsics_coeffs_get
    if _newclass:
        coeffs = _swig_property(_realsense.rs_intrinsics_coeffs_get, _realsense.rs_intrinsics_coeffs_set)

    def __init__(self):
        this = _realsense.new_rs_intrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_intrinsics
    __del__ = lambda self: None
rs_intrinsics_swigregister = _realsense.rs_intrinsics_swigregister
rs_intrinsics_swigregister(rs_intrinsics)

class rs_motion_device_intrinsic(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_motion_device_intrinsic, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_motion_device_intrinsic, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _realsense.rs_motion_device_intrinsic_data_set
    __swig_getmethods__["data"] = _realsense.rs_motion_device_intrinsic_data_get
    if _newclass:
        data = _swig_property(_realsense.rs_motion_device_intrinsic_data_get, _realsense.rs_motion_device_intrinsic_data_set)
    __swig_setmethods__["noise_variances"] = _realsense.rs_motion_device_intrinsic_noise_variances_set
    __swig_getmethods__["noise_variances"] = _realsense.rs_motion_device_intrinsic_noise_variances_get
    if _newclass:
        noise_variances = _swig_property(_realsense.rs_motion_device_intrinsic_noise_variances_get, _realsense.rs_motion_device_intrinsic_noise_variances_set)
    __swig_setmethods__["bias_variances"] = _realsense.rs_motion_device_intrinsic_bias_variances_set
    __swig_getmethods__["bias_variances"] = _realsense.rs_motion_device_intrinsic_bias_variances_get
    if _newclass:
        bias_variances = _swig_property(_realsense.rs_motion_device_intrinsic_bias_variances_get, _realsense.rs_motion_device_intrinsic_bias_variances_set)

    def __init__(self):
        this = _realsense.new_rs_motion_device_intrinsic()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_motion_device_intrinsic
    __del__ = lambda self: None
rs_motion_device_intrinsic_swigregister = _realsense.rs_motion_device_intrinsic_swigregister
rs_motion_device_intrinsic_swigregister(rs_motion_device_intrinsic)

class rs_motion_intrinsics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_motion_intrinsics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_motion_intrinsics, name)
    __repr__ = _swig_repr
    __swig_setmethods__["acc"] = _realsense.rs_motion_intrinsics_acc_set
    __swig_getmethods__["acc"] = _realsense.rs_motion_intrinsics_acc_get
    if _newclass:
        acc = _swig_property(_realsense.rs_motion_intrinsics_acc_get, _realsense.rs_motion_intrinsics_acc_set)
    __swig_setmethods__["gyro"] = _realsense.rs_motion_intrinsics_gyro_set
    __swig_getmethods__["gyro"] = _realsense.rs_motion_intrinsics_gyro_get
    if _newclass:
        gyro = _swig_property(_realsense.rs_motion_intrinsics_gyro_get, _realsense.rs_motion_intrinsics_gyro_set)

    def __init__(self):
        this = _realsense.new_rs_motion_intrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_motion_intrinsics
    __del__ = lambda self: None
rs_motion_intrinsics_swigregister = _realsense.rs_motion_intrinsics_swigregister
rs_motion_intrinsics_swigregister(rs_motion_intrinsics)

class rs_extrinsics(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_extrinsics, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_extrinsics, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rotation"] = _realsense.rs_extrinsics_rotation_set
    __swig_getmethods__["rotation"] = _realsense.rs_extrinsics_rotation_get
    if _newclass:
        rotation = _swig_property(_realsense.rs_extrinsics_rotation_get, _realsense.rs_extrinsics_rotation_set)
    __swig_setmethods__["translation"] = _realsense.rs_extrinsics_translation_set
    __swig_getmethods__["translation"] = _realsense.rs_extrinsics_translation_get
    if _newclass:
        translation = _swig_property(_realsense.rs_extrinsics_translation_get, _realsense.rs_extrinsics_translation_set)

    def __init__(self):
        this = _realsense.new_rs_extrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_extrinsics
    __del__ = lambda self: None
rs_extrinsics_swigregister = _realsense.rs_extrinsics_swigregister
rs_extrinsics_swigregister(rs_extrinsics)

class rs_timestamp_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_timestamp_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_timestamp_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["timestamp"] = _realsense.rs_timestamp_data_timestamp_set
    __swig_getmethods__["timestamp"] = _realsense.rs_timestamp_data_timestamp_get
    if _newclass:
        timestamp = _swig_property(_realsense.rs_timestamp_data_timestamp_get, _realsense.rs_timestamp_data_timestamp_set)
    __swig_setmethods__["source_id"] = _realsense.rs_timestamp_data_source_id_set
    __swig_getmethods__["source_id"] = _realsense.rs_timestamp_data_source_id_get
    if _newclass:
        source_id = _swig_property(_realsense.rs_timestamp_data_source_id_get, _realsense.rs_timestamp_data_source_id_set)
    __swig_setmethods__["frame_number"] = _realsense.rs_timestamp_data_frame_number_set
    __swig_getmethods__["frame_number"] = _realsense.rs_timestamp_data_frame_number_get
    if _newclass:
        frame_number = _swig_property(_realsense.rs_timestamp_data_frame_number_get, _realsense.rs_timestamp_data_frame_number_set)

    def __init__(self):
        this = _realsense.new_rs_timestamp_data()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_timestamp_data
    __del__ = lambda self: None
rs_timestamp_data_swigregister = _realsense.rs_timestamp_data_swigregister
rs_timestamp_data_swigregister(rs_timestamp_data)

class rs_motion_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, rs_motion_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, rs_motion_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["timestamp_data"] = _realsense.rs_motion_data_timestamp_data_set
    __swig_getmethods__["timestamp_data"] = _realsense.rs_motion_data_timestamp_data_get
    if _newclass:
        timestamp_data = _swig_property(_realsense.rs_motion_data_timestamp_data_get, _realsense.rs_motion_data_timestamp_data_set)
    __swig_setmethods__["is_valid"] = _realsense.rs_motion_data_is_valid_set
    __swig_getmethods__["is_valid"] = _realsense.rs_motion_data_is_valid_get
    if _newclass:
        is_valid = _swig_property(_realsense.rs_motion_data_is_valid_get, _realsense.rs_motion_data_is_valid_set)
    __swig_setmethods__["axes"] = _realsense.rs_motion_data_axes_set
    __swig_getmethods__["axes"] = _realsense.rs_motion_data_axes_get
    if _newclass:
        axes = _swig_property(_realsense.rs_motion_data_axes_get, _realsense.rs_motion_data_axes_set)

    def __init__(self):
        this = _realsense.new_rs_motion_data()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_rs_motion_data
    __del__ = lambda self: None
rs_motion_data_swigregister = _realsense.rs_motion_data_swigregister
rs_motion_data_swigregister(rs_motion_data)


def rs_create_context(api_version, error):
    return _realsense.rs_create_context(api_version, error)
rs_create_context = _realsense.rs_create_context

def rs_delete_context(context, error):
    return _realsense.rs_delete_context(context, error)
rs_delete_context = _realsense.rs_delete_context

def rs_get_device_count(context, error):
    return _realsense.rs_get_device_count(context, error)
rs_get_device_count = _realsense.rs_get_device_count

def rs_get_device(context, index, error):
    return _realsense.rs_get_device(context, index, error)
rs_get_device = _realsense.rs_get_device

def rs_get_device_name(device, error):
    return _realsense.rs_get_device_name(device, error)
rs_get_device_name = _realsense.rs_get_device_name

def rs_get_device_serial(device, error):
    return _realsense.rs_get_device_serial(device, error)
rs_get_device_serial = _realsense.rs_get_device_serial

def rs_get_device_info(device, info, error):
    return _realsense.rs_get_device_info(device, info, error)
rs_get_device_info = _realsense.rs_get_device_info

def rs_get_device_usb_port_id(device, error):
    return _realsense.rs_get_device_usb_port_id(device, error)
rs_get_device_usb_port_id = _realsense.rs_get_device_usb_port_id

def rs_get_device_firmware_version(device, error):
    return _realsense.rs_get_device_firmware_version(device, error)
rs_get_device_firmware_version = _realsense.rs_get_device_firmware_version

def rs_get_device_extrinsics(device, from_stream, to_stream, extrin, error):
    return _realsense.rs_get_device_extrinsics(device, from_stream, to_stream, extrin, error)
rs_get_device_extrinsics = _realsense.rs_get_device_extrinsics

def rs_get_motion_extrinsics_from(device, arg2, extrin, error):
    return _realsense.rs_get_motion_extrinsics_from(device, arg2, extrin, error)
rs_get_motion_extrinsics_from = _realsense.rs_get_motion_extrinsics_from

def rs_get_device_depth_scale(device, error):
    return _realsense.rs_get_device_depth_scale(device, error)
rs_get_device_depth_scale = _realsense.rs_get_device_depth_scale

def rs_device_supports_option(device, option, error):
    return _realsense.rs_device_supports_option(device, option, error)
rs_device_supports_option = _realsense.rs_device_supports_option

def rs_get_stream_mode_count(device, stream, error):
    return _realsense.rs_get_stream_mode_count(device, stream, error)
rs_get_stream_mode_count = _realsense.rs_get_stream_mode_count

def rs_get_stream_mode(device, stream, index, width, height, format, framerate, error):
    return _realsense.rs_get_stream_mode(device, stream, index, width, height, format, framerate, error)
rs_get_stream_mode = _realsense.rs_get_stream_mode

def rs_enable_stream_ex(device, stream, width, height, format, framerate, output_format, error):
    return _realsense.rs_enable_stream_ex(device, stream, width, height, format, framerate, output_format, error)
rs_enable_stream_ex = _realsense.rs_enable_stream_ex

def rs_enable_stream(device, stream, width, height, format, framerate, error):
    return _realsense.rs_enable_stream(device, stream, width, height, format, framerate, error)
rs_enable_stream = _realsense.rs_enable_stream

def rs_enable_stream_preset(device, stream, preset, error):
    return _realsense.rs_enable_stream_preset(device, stream, preset, error)
rs_enable_stream_preset = _realsense.rs_enable_stream_preset

def rs_disable_stream(device, stream, error):
    return _realsense.rs_disable_stream(device, stream, error)
rs_disable_stream = _realsense.rs_disable_stream

def rs_is_stream_enabled(device, stream, error):
    return _realsense.rs_is_stream_enabled(device, stream, error)
rs_is_stream_enabled = _realsense.rs_is_stream_enabled

def rs_get_stream_width(device, stream, error):
    return _realsense.rs_get_stream_width(device, stream, error)
rs_get_stream_width = _realsense.rs_get_stream_width

def rs_get_stream_height(device, stream, error):
    return _realsense.rs_get_stream_height(device, stream, error)
rs_get_stream_height = _realsense.rs_get_stream_height

def rs_get_stream_format(device, stream, error):
    return _realsense.rs_get_stream_format(device, stream, error)
rs_get_stream_format = _realsense.rs_get_stream_format

def rs_get_stream_framerate(device, stream, error):
    return _realsense.rs_get_stream_framerate(device, stream, error)
rs_get_stream_framerate = _realsense.rs_get_stream_framerate

def rs_get_stream_intrinsics(device, stream, intrin, error):
    return _realsense.rs_get_stream_intrinsics(device, stream, intrin, error)
rs_get_stream_intrinsics = _realsense.rs_get_stream_intrinsics

def rs_get_motion_intrinsics(device, intrinsic, error):
    return _realsense.rs_get_motion_intrinsics(device, intrinsic, error)
rs_get_motion_intrinsics = _realsense.rs_get_motion_intrinsics

def rs_set_frame_callback(device, stream, on_frame, user, error):
    return _realsense.rs_set_frame_callback(device, stream, on_frame, user, error)
rs_set_frame_callback = _realsense.rs_set_frame_callback

def rs_enable_motion_tracking(device, on_motion_event, motion_handler, on_timestamp_event, timestamp_handler, error):
    return _realsense.rs_enable_motion_tracking(device, on_motion_event, motion_handler, on_timestamp_event, timestamp_handler, error)
rs_enable_motion_tracking = _realsense.rs_enable_motion_tracking

def rs_enable_motion_tracking_cpp(device, motion_callback, timestamp_callback, error):
    return _realsense.rs_enable_motion_tracking_cpp(device, motion_callback, timestamp_callback, error)
rs_enable_motion_tracking_cpp = _realsense.rs_enable_motion_tracking_cpp

def rs_set_frame_callback_cpp(device, stream, callback, error):
    return _realsense.rs_set_frame_callback_cpp(device, stream, callback, error)
rs_set_frame_callback_cpp = _realsense.rs_set_frame_callback_cpp

def rs_disable_motion_tracking(device, error):
    return _realsense.rs_disable_motion_tracking(device, error)
rs_disable_motion_tracking = _realsense.rs_disable_motion_tracking

def rs_is_motion_tracking_active(device, error):
    return _realsense.rs_is_motion_tracking_active(device, error)
rs_is_motion_tracking_active = _realsense.rs_is_motion_tracking_active

def rs_start_device(device, error):
    return _realsense.rs_start_device(device, error)
rs_start_device = _realsense.rs_start_device

def rs_stop_device(device, error):
    return _realsense.rs_stop_device(device, error)
rs_stop_device = _realsense.rs_stop_device

def rs_start_source(device, source, error):
    return _realsense.rs_start_source(device, source, error)
rs_start_source = _realsense.rs_start_source

def rs_stop_source(device, source, error):
    return _realsense.rs_stop_source(device, source, error)
rs_stop_source = _realsense.rs_stop_source

def rs_is_device_streaming(device, error):
    return _realsense.rs_is_device_streaming(device, error)
rs_is_device_streaming = _realsense.rs_is_device_streaming

def rs_get_device_option_range(device, option, min, max, step, error):
    return _realsense.rs_get_device_option_range(device, option, min, max, step, error)
rs_get_device_option_range = _realsense.rs_get_device_option_range

def rs_get_device_option_range_ex(device, option, min, max, step, arg6, error):
    return _realsense.rs_get_device_option_range_ex(device, option, min, max, step, arg6, error)
rs_get_device_option_range_ex = _realsense.rs_get_device_option_range_ex

def rs_get_device_options(device, options, count, values, error):
    return _realsense.rs_get_device_options(device, options, count, values, error)
rs_get_device_options = _realsense.rs_get_device_options

def rs_set_device_options(device, options, count, values, error):
    return _realsense.rs_set_device_options(device, options, count, values, error)
rs_set_device_options = _realsense.rs_set_device_options

def rs_reset_device_options_to_default(device, options, count, error):
    return _realsense.rs_reset_device_options_to_default(device, options, count, error)
rs_reset_device_options_to_default = _realsense.rs_reset_device_options_to_default

def rs_get_device_option(device, option, error):
    return _realsense.rs_get_device_option(device, option, error)
rs_get_device_option = _realsense.rs_get_device_option

def rs_get_device_option_description(device, option, error):
    return _realsense.rs_get_device_option_description(device, option, error)
rs_get_device_option_description = _realsense.rs_get_device_option_description

def rs_set_device_option(device, option, value, error):
    return _realsense.rs_set_device_option(device, option, value, error)
rs_set_device_option = _realsense.rs_set_device_option

def rs_wait_for_frames(device, error):
    return _realsense.rs_wait_for_frames(device, error)
rs_wait_for_frames = _realsense.rs_wait_for_frames

def rs_poll_for_frames(device, error):
    return _realsense.rs_poll_for_frames(device, error)
rs_poll_for_frames = _realsense.rs_poll_for_frames

def rs_supports(device, capability, error):
    return _realsense.rs_supports(device, capability, error)
rs_supports = _realsense.rs_supports

def rs_supports_camera_info(device, info_param, error):
    return _realsense.rs_supports_camera_info(device, info_param, error)
rs_supports_camera_info = _realsense.rs_supports_camera_info

def rs_get_detached_frame_metadata(frame, frame_metadata, error):
    return _realsense.rs_get_detached_frame_metadata(frame, frame_metadata, error)
rs_get_detached_frame_metadata = _realsense.rs_get_detached_frame_metadata

def rs_supports_frame_metadata(frame, frame_metadata, error):
    return _realsense.rs_supports_frame_metadata(frame, frame_metadata, error)
rs_supports_frame_metadata = _realsense.rs_supports_frame_metadata

def rs_get_frame_timestamp(device, stream, error):
    return _realsense.rs_get_frame_timestamp(device, stream, error)
rs_get_frame_timestamp = _realsense.rs_get_frame_timestamp

def rs_get_frame_number(device, stream, error):
    return _realsense.rs_get_frame_number(device, stream, error)
rs_get_frame_number = _realsense.rs_get_frame_number

def rs_get_frame_data(device, stream, error):
    return _realsense.rs_get_frame_data(device, stream, error)
rs_get_frame_data = _realsense.rs_get_frame_data

def rs_release_frame(device, frame, error):
    return _realsense.rs_release_frame(device, frame, error)
rs_release_frame = _realsense.rs_release_frame

def rs_get_detached_frame_timestamp(frame, error):
    return _realsense.rs_get_detached_frame_timestamp(frame, error)
rs_get_detached_frame_timestamp = _realsense.rs_get_detached_frame_timestamp

def rs_get_detached_frame_timestamp_domain(frameset, error):
    return _realsense.rs_get_detached_frame_timestamp_domain(frameset, error)
rs_get_detached_frame_timestamp_domain = _realsense.rs_get_detached_frame_timestamp_domain

def rs_get_detached_frame_number(frame, error):
    return _realsense.rs_get_detached_frame_number(frame, error)
rs_get_detached_frame_number = _realsense.rs_get_detached_frame_number

def rs_get_detached_frame_data(frame, error):
    return _realsense.rs_get_detached_frame_data(frame, error)
rs_get_detached_frame_data = _realsense.rs_get_detached_frame_data

def rs_get_detached_frame_width(frame, error):
    return _realsense.rs_get_detached_frame_width(frame, error)
rs_get_detached_frame_width = _realsense.rs_get_detached_frame_width

def rs_get_detached_frame_height(frame, error):
    return _realsense.rs_get_detached_frame_height(frame, error)
rs_get_detached_frame_height = _realsense.rs_get_detached_frame_height

def rs_get_detached_framerate(frameset, error):
    return _realsense.rs_get_detached_framerate(frameset, error)
rs_get_detached_framerate = _realsense.rs_get_detached_framerate

def rs_get_detached_frame_stride(frame, error):
    return _realsense.rs_get_detached_frame_stride(frame, error)
rs_get_detached_frame_stride = _realsense.rs_get_detached_frame_stride

def rs_get_detached_frame_bpp(frame, error):
    return _realsense.rs_get_detached_frame_bpp(frame, error)
rs_get_detached_frame_bpp = _realsense.rs_get_detached_frame_bpp

def rs_get_detached_frame_format(frame, error):
    return _realsense.rs_get_detached_frame_format(frame, error)
rs_get_detached_frame_format = _realsense.rs_get_detached_frame_format

def rs_get_detached_frame_stream_type(frameset, error):
    return _realsense.rs_get_detached_frame_stream_type(frameset, error)
rs_get_detached_frame_stream_type = _realsense.rs_get_detached_frame_stream_type

def rs_send_blob_to_device(device, type, data, size, error):
    return _realsense.rs_send_blob_to_device(device, type, data, size, error)
rs_send_blob_to_device = _realsense.rs_send_blob_to_device

def rs_get_api_version(error):
    return _realsense.rs_get_api_version(error)
rs_get_api_version = _realsense.rs_get_api_version

def rs_get_failed_function(error):
    return _realsense.rs_get_failed_function(error)
rs_get_failed_function = _realsense.rs_get_failed_function

def rs_get_failed_args(error):
    return _realsense.rs_get_failed_args(error)
rs_get_failed_args = _realsense.rs_get_failed_args

def rs_get_error_message(error):
    return _realsense.rs_get_error_message(error)
rs_get_error_message = _realsense.rs_get_error_message

def rs_free_error(error):
    return _realsense.rs_free_error(error)
rs_free_error = _realsense.rs_free_error

def rs_stream_to_string(stream):
    return _realsense.rs_stream_to_string(stream)
rs_stream_to_string = _realsense.rs_stream_to_string

def rs_format_to_string(format):
    return _realsense.rs_format_to_string(format)
rs_format_to_string = _realsense.rs_format_to_string

def rs_preset_to_string(preset):
    return _realsense.rs_preset_to_string(preset)
rs_preset_to_string = _realsense.rs_preset_to_string

def rs_distortion_to_string(distortion):
    return _realsense.rs_distortion_to_string(distortion)
rs_distortion_to_string = _realsense.rs_distortion_to_string

def rs_option_to_string(option):
    return _realsense.rs_option_to_string(option)
rs_option_to_string = _realsense.rs_option_to_string

def rs_capabilities_to_string(capability):
    return _realsense.rs_capabilities_to_string(capability)
rs_capabilities_to_string = _realsense.rs_capabilities_to_string

def rs_source_to_string(source):
    return _realsense.rs_source_to_string(source)
rs_source_to_string = _realsense.rs_source_to_string

def rs_event_to_string(event):
    return _realsense.rs_event_to_string(event)
rs_event_to_string = _realsense.rs_event_to_string

def rs_blob_type_to_string(type):
    return _realsense.rs_blob_type_to_string(type)
rs_blob_type_to_string = _realsense.rs_blob_type_to_string

def rs_camera_info_to_string(info):
    return _realsense.rs_camera_info_to_string(info)
rs_camera_info_to_string = _realsense.rs_camera_info_to_string

def rs_timestamp_domain_to_string(info):
    return _realsense.rs_timestamp_domain_to_string(info)
rs_timestamp_domain_to_string = _realsense.rs_timestamp_domain_to_string

def rs_frame_metadata_to_string(md):
    return _realsense.rs_frame_metadata_to_string(md)
rs_frame_metadata_to_string = _realsense.rs_frame_metadata_to_string

def rs_log_to_console(min_severity, error):
    return _realsense.rs_log_to_console(min_severity, error)
rs_log_to_console = _realsense.rs_log_to_console

def rs_log_to_file(min_severity, file_path, error):
    return _realsense.rs_log_to_file(min_severity, file_path, error)
rs_log_to_file = _realsense.rs_log_to_file

def rs_log_to_callback_cpp(min_severity, callback, error):
    return _realsense.rs_log_to_callback_cpp(min_severity, callback, error)
rs_log_to_callback_cpp = _realsense.rs_log_to_callback_cpp

def rs_log_to_callback(min_severity, on_log, user, error):
    return _realsense.rs_log_to_callback(min_severity, on_log, user, error)
rs_log_to_callback = _realsense.rs_log_to_callback

_realsense.stream_depth_swigconstant(_realsense)
stream_depth = _realsense.stream_depth

_realsense.stream_color_swigconstant(_realsense)
stream_color = _realsense.stream_color

_realsense.stream_infrared_swigconstant(_realsense)
stream_infrared = _realsense.stream_infrared

_realsense.stream_infrared2_swigconstant(_realsense)
stream_infrared2 = _realsense.stream_infrared2

_realsense.stream_fisheye_swigconstant(_realsense)
stream_fisheye = _realsense.stream_fisheye

_realsense.stream_points_swigconstant(_realsense)
stream_points = _realsense.stream_points

_realsense.stream_rectified_color_swigconstant(_realsense)
stream_rectified_color = _realsense.stream_rectified_color

_realsense.stream_color_aligned_to_depth_swigconstant(_realsense)
stream_color_aligned_to_depth = _realsense.stream_color_aligned_to_depth

_realsense.stream_infrared2_aligned_to_depth_swigconstant(_realsense)
stream_infrared2_aligned_to_depth = _realsense.stream_infrared2_aligned_to_depth

_realsense.stream_depth_aligned_to_color_swigconstant(_realsense)
stream_depth_aligned_to_color = _realsense.stream_depth_aligned_to_color

_realsense.stream_depth_aligned_to_rectified_color_swigconstant(_realsense)
stream_depth_aligned_to_rectified_color = _realsense.stream_depth_aligned_to_rectified_color

_realsense.stream_depth_aligned_to_infrared2_swigconstant(_realsense)
stream_depth_aligned_to_infrared2 = _realsense.stream_depth_aligned_to_infrared2

_realsense.format_any_swigconstant(_realsense)
format_any = _realsense.format_any

_realsense.format_z16_swigconstant(_realsense)
format_z16 = _realsense.format_z16

_realsense.format_disparity16_swigconstant(_realsense)
format_disparity16 = _realsense.format_disparity16

_realsense.format_xyz32f_swigconstant(_realsense)
format_xyz32f = _realsense.format_xyz32f

_realsense.format_yuyv_swigconstant(_realsense)
format_yuyv = _realsense.format_yuyv

_realsense.format_rgb8_swigconstant(_realsense)
format_rgb8 = _realsense.format_rgb8

_realsense.format_bgr8_swigconstant(_realsense)
format_bgr8 = _realsense.format_bgr8

_realsense.format_rgba8_swigconstant(_realsense)
format_rgba8 = _realsense.format_rgba8

_realsense.format_bgra8_swigconstant(_realsense)
format_bgra8 = _realsense.format_bgra8

_realsense.format_y8_swigconstant(_realsense)
format_y8 = _realsense.format_y8

_realsense.format_y16_swigconstant(_realsense)
format_y16 = _realsense.format_y16

_realsense.format_raw10_swigconstant(_realsense)
format_raw10 = _realsense.format_raw10

_realsense.format_raw16_swigconstant(_realsense)
format_raw16 = _realsense.format_raw16

_realsense.format_raw8_swigconstant(_realsense)
format_raw8 = _realsense.format_raw8

_realsense.output_buffer_format_continous_swigconstant(_realsense)
output_buffer_format_continous = _realsense.output_buffer_format_continous

_realsense.output_buffer_format_native_swigconstant(_realsense)
output_buffer_format_native = _realsense.output_buffer_format_native

_realsense.preset_best_quality_swigconstant(_realsense)
preset_best_quality = _realsense.preset_best_quality

_realsense.preset_largest_image_swigconstant(_realsense)
preset_largest_image = _realsense.preset_largest_image

_realsense.preset_highest_framerate_swigconstant(_realsense)
preset_highest_framerate = _realsense.preset_highest_framerate

_realsense.distortion_none_swigconstant(_realsense)
distortion_none = _realsense.distortion_none

_realsense.distortion_modified_brown_conrady_swigconstant(_realsense)
distortion_modified_brown_conrady = _realsense.distortion_modified_brown_conrady

_realsense.distortion_inverse_brown_conrady_swigconstant(_realsense)
distortion_inverse_brown_conrady = _realsense.distortion_inverse_brown_conrady

_realsense.distortion_distortion_ftheta_swigconstant(_realsense)
distortion_distortion_ftheta = _realsense.distortion_distortion_ftheta

_realsense.option_color_backlight_compensation_swigconstant(_realsense)
option_color_backlight_compensation = _realsense.option_color_backlight_compensation

_realsense.option_color_brightness_swigconstant(_realsense)
option_color_brightness = _realsense.option_color_brightness

_realsense.option_color_contrast_swigconstant(_realsense)
option_color_contrast = _realsense.option_color_contrast

_realsense.option_color_exposure_swigconstant(_realsense)
option_color_exposure = _realsense.option_color_exposure

_realsense.option_color_gain_swigconstant(_realsense)
option_color_gain = _realsense.option_color_gain

_realsense.option_color_gamma_swigconstant(_realsense)
option_color_gamma = _realsense.option_color_gamma

_realsense.option_color_hue_swigconstant(_realsense)
option_color_hue = _realsense.option_color_hue

_realsense.option_color_saturation_swigconstant(_realsense)
option_color_saturation = _realsense.option_color_saturation

_realsense.option_color_sharpness_swigconstant(_realsense)
option_color_sharpness = _realsense.option_color_sharpness

_realsense.option_color_white_balance_swigconstant(_realsense)
option_color_white_balance = _realsense.option_color_white_balance

_realsense.option_color_enable_auto_exposure_swigconstant(_realsense)
option_color_enable_auto_exposure = _realsense.option_color_enable_auto_exposure

_realsense.option_color_enable_auto_white_balance_swigconstant(_realsense)
option_color_enable_auto_white_balance = _realsense.option_color_enable_auto_white_balance

_realsense.option_f200_laser_power_swigconstant(_realsense)
option_f200_laser_power = _realsense.option_f200_laser_power

_realsense.option_f200_accuracy_swigconstant(_realsense)
option_f200_accuracy = _realsense.option_f200_accuracy

_realsense.option_f200_motion_range_swigconstant(_realsense)
option_f200_motion_range = _realsense.option_f200_motion_range

_realsense.option_f200_filter_option_swigconstant(_realsense)
option_f200_filter_option = _realsense.option_f200_filter_option

_realsense.option_f200_confidence_threshold_swigconstant(_realsense)
option_f200_confidence_threshold = _realsense.option_f200_confidence_threshold

_realsense.option_f200_dynamic_fps_swigconstant(_realsense)
option_f200_dynamic_fps = _realsense.option_f200_dynamic_fps

_realsense.option_sr300_auto_range_enable_motion_versus_range_swigconstant(_realsense)
option_sr300_auto_range_enable_motion_versus_range = _realsense.option_sr300_auto_range_enable_motion_versus_range

_realsense.option_sr300_auto_range_enable_laser_swigconstant(_realsense)
option_sr300_auto_range_enable_laser = _realsense.option_sr300_auto_range_enable_laser

_realsense.option_sr300_auto_range_min_motion_versus_range_swigconstant(_realsense)
option_sr300_auto_range_min_motion_versus_range = _realsense.option_sr300_auto_range_min_motion_versus_range

_realsense.option_sr300_auto_range_max_motion_versus_range_swigconstant(_realsense)
option_sr300_auto_range_max_motion_versus_range = _realsense.option_sr300_auto_range_max_motion_versus_range

_realsense.option_sr300_auto_range_start_motion_versus_range_swigconstant(_realsense)
option_sr300_auto_range_start_motion_versus_range = _realsense.option_sr300_auto_range_start_motion_versus_range

_realsense.option_sr300_auto_range_min_laser_swigconstant(_realsense)
option_sr300_auto_range_min_laser = _realsense.option_sr300_auto_range_min_laser

_realsense.option_sr300_auto_range_max_laser_swigconstant(_realsense)
option_sr300_auto_range_max_laser = _realsense.option_sr300_auto_range_max_laser

_realsense.option_sr300_auto_range_start_laser_swigconstant(_realsense)
option_sr300_auto_range_start_laser = _realsense.option_sr300_auto_range_start_laser

_realsense.option_sr300_auto_range_upper_threshold_swigconstant(_realsense)
option_sr300_auto_range_upper_threshold = _realsense.option_sr300_auto_range_upper_threshold

_realsense.option_sr300_auto_range_lower_threshold_swigconstant(_realsense)
option_sr300_auto_range_lower_threshold = _realsense.option_sr300_auto_range_lower_threshold

_realsense.option_r200_lr_auto_exposure_enabled_swigconstant(_realsense)
option_r200_lr_auto_exposure_enabled = _realsense.option_r200_lr_auto_exposure_enabled

_realsense.option_r200_lr_gain_swigconstant(_realsense)
option_r200_lr_gain = _realsense.option_r200_lr_gain

_realsense.option_r200_lr_exposure_swigconstant(_realsense)
option_r200_lr_exposure = _realsense.option_r200_lr_exposure

_realsense.option_r200_emitter_enabled_swigconstant(_realsense)
option_r200_emitter_enabled = _realsense.option_r200_emitter_enabled

_realsense.option_r200_depth_units_swigconstant(_realsense)
option_r200_depth_units = _realsense.option_r200_depth_units

_realsense.option_r200_depth_clamp_min_swigconstant(_realsense)
option_r200_depth_clamp_min = _realsense.option_r200_depth_clamp_min

_realsense.option_r200_depth_clamp_max_swigconstant(_realsense)
option_r200_depth_clamp_max = _realsense.option_r200_depth_clamp_max

_realsense.option_r200_disparity_multiplier_swigconstant(_realsense)
option_r200_disparity_multiplier = _realsense.option_r200_disparity_multiplier

_realsense.option_r200_disparity_shift_swigconstant(_realsense)
option_r200_disparity_shift = _realsense.option_r200_disparity_shift

_realsense.option_r200_auto_exposure_mean_intensity_set_point_swigconstant(_realsense)
option_r200_auto_exposure_mean_intensity_set_point = _realsense.option_r200_auto_exposure_mean_intensity_set_point

_realsense.option_r200_auto_exposure_bright_ratio_set_point_swigconstant(_realsense)
option_r200_auto_exposure_bright_ratio_set_point = _realsense.option_r200_auto_exposure_bright_ratio_set_point

_realsense.option_r200_auto_exposure_kp_gain_swigconstant(_realsense)
option_r200_auto_exposure_kp_gain = _realsense.option_r200_auto_exposure_kp_gain

_realsense.option_r200_auto_exposure_kp_exposure_swigconstant(_realsense)
option_r200_auto_exposure_kp_exposure = _realsense.option_r200_auto_exposure_kp_exposure

_realsense.option_r200_auto_exposure_kp_dark_threshold_swigconstant(_realsense)
option_r200_auto_exposure_kp_dark_threshold = _realsense.option_r200_auto_exposure_kp_dark_threshold

_realsense.option_r200_auto_exposure_top_edge_swigconstant(_realsense)
option_r200_auto_exposure_top_edge = _realsense.option_r200_auto_exposure_top_edge

_realsense.option_r200_auto_exposure_bottom_edge_swigconstant(_realsense)
option_r200_auto_exposure_bottom_edge = _realsense.option_r200_auto_exposure_bottom_edge

_realsense.option_r200_auto_exposure_left_edge_swigconstant(_realsense)
option_r200_auto_exposure_left_edge = _realsense.option_r200_auto_exposure_left_edge

_realsense.option_r200_auto_exposure_right_edge_swigconstant(_realsense)
option_r200_auto_exposure_right_edge = _realsense.option_r200_auto_exposure_right_edge

_realsense.option_r200_depth_control_estimate_median_decrement_swigconstant(_realsense)
option_r200_depth_control_estimate_median_decrement = _realsense.option_r200_depth_control_estimate_median_decrement

_realsense.option_r200_depth_control_estimate_median_increment_swigconstant(_realsense)
option_r200_depth_control_estimate_median_increment = _realsense.option_r200_depth_control_estimate_median_increment

_realsense.option_r200_depth_control_median_threshold_swigconstant(_realsense)
option_r200_depth_control_median_threshold = _realsense.option_r200_depth_control_median_threshold

_realsense.option_r200_depth_control_score_minimum_threshold_swigconstant(_realsense)
option_r200_depth_control_score_minimum_threshold = _realsense.option_r200_depth_control_score_minimum_threshold

_realsense.option_r200_depth_control_score_maximum_threshold_swigconstant(_realsense)
option_r200_depth_control_score_maximum_threshold = _realsense.option_r200_depth_control_score_maximum_threshold

_realsense.option_r200_depth_control_texture_count_threshold_swigconstant(_realsense)
option_r200_depth_control_texture_count_threshold = _realsense.option_r200_depth_control_texture_count_threshold

_realsense.option_r200_depth_control_texture_difference_threshold_swigconstant(_realsense)
option_r200_depth_control_texture_difference_threshold = _realsense.option_r200_depth_control_texture_difference_threshold

_realsense.option_r200_depth_control_second_peak_threshold_swigconstant(_realsense)
option_r200_depth_control_second_peak_threshold = _realsense.option_r200_depth_control_second_peak_threshold

_realsense.option_r200_depth_control_neighbor_threshold_swigconstant(_realsense)
option_r200_depth_control_neighbor_threshold = _realsense.option_r200_depth_control_neighbor_threshold

_realsense.option_r200_depth_control_lr_threshold_swigconstant(_realsense)
option_r200_depth_control_lr_threshold = _realsense.option_r200_depth_control_lr_threshold

_realsense.option_fisheye_exposure_swigconstant(_realsense)
option_fisheye_exposure = _realsense.option_fisheye_exposure

_realsense.option_fisheye_gain_swigconstant(_realsense)
option_fisheye_gain = _realsense.option_fisheye_gain

_realsense.option_fisheye_strobe_swigconstant(_realsense)
option_fisheye_strobe = _realsense.option_fisheye_strobe

_realsense.option_fisheye_external_trigger_swigconstant(_realsense)
option_fisheye_external_trigger = _realsense.option_fisheye_external_trigger

_realsense.option_fisheye_color_auto_exposure_swigconstant(_realsense)
option_fisheye_color_auto_exposure = _realsense.option_fisheye_color_auto_exposure

_realsense.option_fisheye_color_auto_exposure_mode_swigconstant(_realsense)
option_fisheye_color_auto_exposure_mode = _realsense.option_fisheye_color_auto_exposure_mode

_realsense.option_fisheye_color_auto_exposure_rate_swigconstant(_realsense)
option_fisheye_color_auto_exposure_rate = _realsense.option_fisheye_color_auto_exposure_rate

_realsense.option_fisheye_color_auto_exposure_sample_rate_swigconstant(_realsense)
option_fisheye_color_auto_exposure_sample_rate = _realsense.option_fisheye_color_auto_exposure_sample_rate

_realsense.option_fisheye_color_auto_exposure_skip_frames_swigconstant(_realsense)
option_fisheye_color_auto_exposure_skip_frames = _realsense.option_fisheye_color_auto_exposure_skip_frames

_realsense.option_frames_queue_size_swigconstant(_realsense)
option_frames_queue_size = _realsense.option_frames_queue_size

_realsense.option_hardware_logger_enabled_swigconstant(_realsense)
option_hardware_logger_enabled = _realsense.option_hardware_logger_enabled

_realsense.option_total_frame_drops_swigconstant(_realsense)
option_total_frame_drops = _realsense.option_total_frame_drops

_realsense.frame_metadata_actual_exposure_swigconstant(_realsense)
frame_metadata_actual_exposure = _realsense.frame_metadata_actual_exposure

_realsense.frame_metadata_actual_fps_swigconstant(_realsense)
frame_metadata_actual_fps = _realsense.frame_metadata_actual_fps

_realsense.capabilities_depth_swigconstant(_realsense)
capabilities_depth = _realsense.capabilities_depth

_realsense.capabilities_color_swigconstant(_realsense)
capabilities_color = _realsense.capabilities_color

_realsense.capabilities_infrared_swigconstant(_realsense)
capabilities_infrared = _realsense.capabilities_infrared

_realsense.capabilities_infrared2_swigconstant(_realsense)
capabilities_infrared2 = _realsense.capabilities_infrared2

_realsense.capabilities_fish_eye_swigconstant(_realsense)
capabilities_fish_eye = _realsense.capabilities_fish_eye

_realsense.capabilities_motion_events_swigconstant(_realsense)
capabilities_motion_events = _realsense.capabilities_motion_events

_realsense.capabilities_motion_module_fw_update_swigconstant(_realsense)
capabilities_motion_module_fw_update = _realsense.capabilities_motion_module_fw_update

_realsense.capabilities_adapter_board_swigconstant(_realsense)
capabilities_adapter_board = _realsense.capabilities_adapter_board

_realsense.capabilities_enumeration_swigconstant(_realsense)
capabilities_enumeration = _realsense.capabilities_enumeration

_realsense.blob_type_motion_module_firmware_update_swigconstant(_realsense)
blob_type_motion_module_firmware_update = _realsense.blob_type_motion_module_firmware_update

_realsense.camera_info_device_name_swigconstant(_realsense)
camera_info_device_name = _realsense.camera_info_device_name

_realsense.camera_info_serial_number_swigconstant(_realsense)
camera_info_serial_number = _realsense.camera_info_serial_number

_realsense.camera_info_camera_firmware_version_swigconstant(_realsense)
camera_info_camera_firmware_version = _realsense.camera_info_camera_firmware_version

_realsense.camera_info_adapter_board_firmware_version_swigconstant(_realsense)
camera_info_adapter_board_firmware_version = _realsense.camera_info_adapter_board_firmware_version

_realsense.camera_info_motion_module_firmware_version_swigconstant(_realsense)
camera_info_motion_module_firmware_version = _realsense.camera_info_motion_module_firmware_version

_realsense.camera_info_camera_type_swigconstant(_realsense)
camera_info_camera_type = _realsense.camera_info_camera_type

_realsense.camera_info_oem_id_swigconstant(_realsense)
camera_info_oem_id = _realsense.camera_info_oem_id

_realsense.camera_info_isp_fw_version_swigconstant(_realsense)
camera_info_isp_fw_version = _realsense.camera_info_isp_fw_version

_realsense.camera_info_content_version_swigconstant(_realsense)
camera_info_content_version = _realsense.camera_info_content_version

_realsense.camera_info_module_version_swigconstant(_realsense)
camera_info_module_version = _realsense.camera_info_module_version

_realsense.camera_info_imager_model_number_swigconstant(_realsense)
camera_info_imager_model_number = _realsense.camera_info_imager_model_number

_realsense.camera_info_build_date_swigconstant(_realsense)
camera_info_build_date = _realsense.camera_info_build_date

_realsense.camera_info_calibration_date_swigconstant(_realsense)
camera_info_calibration_date = _realsense.camera_info_calibration_date

_realsense.camera_info_program_date_swigconstant(_realsense)
camera_info_program_date = _realsense.camera_info_program_date

_realsense.camera_info_focus_alignment_date_swigconstant(_realsense)
camera_info_focus_alignment_date = _realsense.camera_info_focus_alignment_date

_realsense.camera_info_emitter_type_swigconstant(_realsense)
camera_info_emitter_type = _realsense.camera_info_emitter_type

_realsense.camera_info_focus_value_swigconstant(_realsense)
camera_info_focus_value = _realsense.camera_info_focus_value

_realsense.camera_info_lens_type_swigconstant(_realsense)
camera_info_lens_type = _realsense.camera_info_lens_type

_realsense.camera_info_third_lens_type_swigconstant(_realsense)
camera_info_third_lens_type = _realsense.camera_info_third_lens_type

_realsense.camera_info_lens_coating_type_swigconstant(_realsense)
camera_info_lens_coating_type = _realsense.camera_info_lens_coating_type

_realsense.camera_info_third_lens_coating_type_swigconstant(_realsense)
camera_info_third_lens_coating_type = _realsense.camera_info_third_lens_coating_type

_realsense.camera_info_lens_nominal_baseline_swigconstant(_realsense)
camera_info_lens_nominal_baseline = _realsense.camera_info_lens_nominal_baseline

_realsense.camera_info_third_lens_nominal_baseline_swigconstant(_realsense)
camera_info_third_lens_nominal_baseline = _realsense.camera_info_third_lens_nominal_baseline

_realsense.source_video_swigconstant(_realsense)
source_video = _realsense.source_video

_realsense.source_motion_data_swigconstant(_realsense)
source_motion_data = _realsense.source_motion_data

_realsense.source_all_sources_swigconstant(_realsense)
source_all_sources = _realsense.source_all_sources

_realsense.event_event_imu_accel_swigconstant(_realsense)
event_event_imu_accel = _realsense.event_event_imu_accel

_realsense.event_event_imu_gyro_swigconstant(_realsense)
event_event_imu_gyro = _realsense.event_event_imu_gyro

_realsense.event_event_imu_depth_cam_swigconstant(_realsense)
event_event_imu_depth_cam = _realsense.event_event_imu_depth_cam

_realsense.event_event_imu_motion_cam_swigconstant(_realsense)
event_event_imu_motion_cam = _realsense.event_event_imu_motion_cam

_realsense.event_event_imu_g0_sync_swigconstant(_realsense)
event_event_imu_g0_sync = _realsense.event_event_imu_g0_sync

_realsense.event_event_imu_g1_sync_swigconstant(_realsense)
event_event_imu_g1_sync = _realsense.event_event_imu_g1_sync

_realsense.event_event_imu_g2_sync_swigconstant(_realsense)
event_event_imu_g2_sync = _realsense.event_event_imu_g2_sync

_realsense.timestamp_domain_camera_swigconstant(_realsense)
timestamp_domain_camera = _realsense.timestamp_domain_camera

_realsense.timestamp_domain_microcontroller_swigconstant(_realsense)
timestamp_domain_microcontroller = _realsense.timestamp_domain_microcontroller
class float2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, float2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, float2, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _realsense.float2_x_set
    __swig_getmethods__["x"] = _realsense.float2_x_get
    if _newclass:
        x = _swig_property(_realsense.float2_x_get, _realsense.float2_x_set)
    __swig_setmethods__["y"] = _realsense.float2_y_set
    __swig_getmethods__["y"] = _realsense.float2_y_get
    if _newclass:
        y = _swig_property(_realsense.float2_y_get, _realsense.float2_y_set)

    def __init__(self):
        this = _realsense.new_float2()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_float2
    __del__ = lambda self: None
float2_swigregister = _realsense.float2_swigregister
float2_swigregister(float2)

class float3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, float3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, float3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x"] = _realsense.float3_x_set
    __swig_getmethods__["x"] = _realsense.float3_x_get
    if _newclass:
        x = _swig_property(_realsense.float3_x_get, _realsense.float3_x_set)
    __swig_setmethods__["y"] = _realsense.float3_y_set
    __swig_getmethods__["y"] = _realsense.float3_y_get
    if _newclass:
        y = _swig_property(_realsense.float3_y_get, _realsense.float3_y_set)
    __swig_setmethods__["z"] = _realsense.float3_z_set
    __swig_getmethods__["z"] = _realsense.float3_z_get
    if _newclass:
        z = _swig_property(_realsense.float3_z_get, _realsense.float3_z_set)

    def __init__(self):
        this = _realsense.new_float3()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_float3
    __del__ = lambda self: None
float3_swigregister = _realsense.float3_swigregister
float3_swigregister(float3)

class intrinsics(rs_intrinsics):
    __swig_setmethods__ = {}
    for _s in [rs_intrinsics]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, intrinsics, name, value)
    __swig_getmethods__ = {}
    for _s in [rs_intrinsics]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, intrinsics, name)
    __repr__ = _swig_repr

    def hfov(self):
        return _realsense.intrinsics_hfov(self)

    def vfov(self):
        return _realsense.intrinsics_vfov(self)

    def model(self):
        return _realsense.intrinsics_model(self)

    def pixel_to_texcoord(self, pixel):
        return _realsense.intrinsics_pixel_to_texcoord(self, pixel)

    def texcoord_to_pixel(self, coord):
        return _realsense.intrinsics_texcoord_to_pixel(self, coord)

    def deproject(self, pixel, depth):
        return _realsense.intrinsics_deproject(self, pixel, depth)

    def deproject_from_texcoord(self, coord, depth):
        return _realsense.intrinsics_deproject_from_texcoord(self, coord, depth)

    def project(self, point):
        return _realsense.intrinsics_project(self, point)

    def project_to_texcoord(self, point):
        return _realsense.intrinsics_project_to_texcoord(self, point)

    def __eq__(self, r):
        return _realsense.intrinsics___eq__(self, r)

    def __init__(self):
        this = _realsense.new_intrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_intrinsics
    __del__ = lambda self: None
intrinsics_swigregister = _realsense.intrinsics_swigregister
intrinsics_swigregister(intrinsics)

class motion_intrinsics(rs_motion_intrinsics):
    __swig_setmethods__ = {}
    for _s in [rs_motion_intrinsics]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, motion_intrinsics, name, value)
    __swig_getmethods__ = {}
    for _s in [rs_motion_intrinsics]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, motion_intrinsics, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _realsense.new_motion_intrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_motion_intrinsics
    __del__ = lambda self: None
motion_intrinsics_swigregister = _realsense.motion_intrinsics_swigregister
motion_intrinsics_swigregister(motion_intrinsics)

class extrinsics(rs_extrinsics):
    __swig_setmethods__ = {}
    for _s in [rs_extrinsics]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, extrinsics, name, value)
    __swig_getmethods__ = {}
    for _s in [rs_extrinsics]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, extrinsics, name)
    __repr__ = _swig_repr

    def is_identity(self):
        return _realsense.extrinsics_is_identity(self)

    def transform(self, point):
        return _realsense.extrinsics_transform(self, point)

    def __init__(self):
        this = _realsense.new_extrinsics()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_extrinsics
    __del__ = lambda self: None
extrinsics_swigregister = _realsense.extrinsics_swigregister
extrinsics_swigregister(extrinsics)

class timestamp_data(rs_timestamp_data):
    __swig_setmethods__ = {}
    for _s in [rs_timestamp_data]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, timestamp_data, name, value)
    __swig_getmethods__ = {}
    for _s in [rs_timestamp_data]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, timestamp_data, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _realsense.new_timestamp_data(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_timestamp_data
    __del__ = lambda self: None
timestamp_data_swigregister = _realsense.timestamp_data_swigregister
timestamp_data_swigregister(timestamp_data)

class motion_data(rs_motion_data):
    __swig_setmethods__ = {}
    for _s in [rs_motion_data]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, motion_data, name, value)
    __swig_getmethods__ = {}
    for _s in [rs_motion_data]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, motion_data, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _realsense.new_motion_data(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_motion_data
    __del__ = lambda self: None
motion_data_swigregister = _realsense.motion_data_swigregister
motion_data_swigregister(motion_data)

class error(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, error, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, error, name)
    __repr__ = _swig_repr

    def __init__(self, err):
        this = _realsense.new_error(err)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def get_failed_function(self):
        return _realsense.error_get_failed_function(self)

    def get_failed_args(self):
        return _realsense.error_get_failed_args(self)
    __swig_getmethods__["handle"] = lambda x: _realsense.error_handle
    if _newclass:
        handle = staticmethod(_realsense.error_handle)
    __swig_destroy__ = _realsense.delete_error
    __del__ = lambda self: None
error_swigregister = _realsense.error_swigregister
error_swigregister(error)

def error_handle(e):
    return _realsense.error_handle(e)
error_handle = _realsense.error_handle

class context(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, context, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, context, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _realsense.new_context(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _realsense.delete_context
    __del__ = lambda self: None

    def get_device_count(self):
        return _realsense.context_get_device_count(self)

    def get_device(self, index):
        return _realsense.context_get_device(self, index)
context_swigregister = _realsense.context_swigregister
context_swigregister(context)

class motion_callback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, motion_callback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, motion_callback, name)
    __repr__ = _swig_repr

    def __init__(self, on_event):
        this = _realsense.new_motion_callback(on_event)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def on_event(self, e):
        return _realsense.motion_callback_on_event(self, e)

    def release(self):
        return _realsense.motion_callback_release(self)
    __swig_destroy__ = _realsense.delete_motion_callback
    __del__ = lambda self: None
motion_callback_swigregister = _realsense.motion_callback_swigregister
motion_callback_swigregister(motion_callback)

class timestamp_callback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, timestamp_callback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, timestamp_callback, name)
    __repr__ = _swig_repr

    def __init__(self, on_event):
        this = _realsense.new_timestamp_callback(on_event)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def on_event(self, data):
        return _realsense.timestamp_callback_on_event(self, data)

    def release(self):
        return _realsense.timestamp_callback_release(self)
    __swig_destroy__ = _realsense.delete_timestamp_callback
    __del__ = lambda self: None
timestamp_callback_swigregister = _realsense.timestamp_callback_swigregister
timestamp_callback_swigregister(timestamp_callback)

class frame(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, frame, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, frame, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _realsense.new_frame(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def swap(self, other):
        return _realsense.frame_swap(self, other)
    __swig_destroy__ = _realsense.delete_frame
    __del__ = lambda self: None

    def get_timestamp(self):
        return _realsense.frame_get_timestamp(self)

    def get_frame_timestamp_domain(self):
        return _realsense.frame_get_frame_timestamp_domain(self)

    def get_frame_metadata(self, frame_metadata):
        return _realsense.frame_get_frame_metadata(self, frame_metadata)

    def supports_frame_metadata(self, frame_metadata):
        return _realsense.frame_supports_frame_metadata(self, frame_metadata)

    def get_frame_number(self):
        return _realsense.frame_get_frame_number(self)

    def get_data(self):
        return _realsense.frame_get_data(self)

    def get_width(self):
        return _realsense.frame_get_width(self)

    def get_height(self):
        return _realsense.frame_get_height(self)

    def get_framerate(self):
        return _realsense.frame_get_framerate(self)

    def get_stride(self):
        return _realsense.frame_get_stride(self)

    def get_bpp(self):
        return _realsense.frame_get_bpp(self)

    def get_format(self):
        return _realsense.frame_get_format(self)

    def get_stream_type(self):
        return _realsense.frame_get_stream_type(self)
frame_swigregister = _realsense.frame_swigregister
frame_swigregister(frame)

class frame_callback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, frame_callback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, frame_callback, name)
    __repr__ = _swig_repr

    def __init__(self, on_frame):
        this = _realsense.new_frame_callback(on_frame)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def on_frame(self, device, fref):
        return _realsense.frame_callback_on_frame(self, device, fref)

    def release(self):
        return _realsense.frame_callback_release(self)
    __swig_destroy__ = _realsense.delete_frame_callback
    __del__ = lambda self: None
frame_callback_swigregister = _realsense.frame_callback_swigregister
frame_callback_swigregister(frame_callback)

class device(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, device, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, device, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def get_name(self):
        return _realsense.device_get_name(self)

    def get_serial(self):
        return _realsense.device_get_serial(self)

    def get_usb_port_id(self):
        return _realsense.device_get_usb_port_id(self)

    def get_firmware_version(self):
        return _realsense.device_get_firmware_version(self)

    def get_info(self, info):
        return _realsense.device_get_info(self, info)

    def get_extrinsics(self, from_stream, to_stream):
        return _realsense.device_get_extrinsics(self, from_stream, to_stream)

    def get_motion_extrinsics_from(self, from_stream):
        return _realsense.device_get_motion_extrinsics_from(self, from_stream)

    def get_depth_scale(self):
        return _realsense.device_get_depth_scale(self)

    def supports_option(self, option):
        return _realsense.device_supports_option(self, option)

    def get_stream_mode_count(self, stream):
        return _realsense.device_get_stream_mode_count(self, stream)

    def get_stream_mode(self, stream, index):
        return _realsense.device_get_stream_mode(self, stream, index)

    def enable_stream(self, *args):
        return _realsense.device_enable_stream(self, *args)

    def disable_stream(self, stream):
        return _realsense.device_disable_stream(self, stream)

    def is_stream_enabled(self, stream):
        return _realsense.device_is_stream_enabled(self, stream)

    def get_stream_width(self, stream):
        return _realsense.device_get_stream_width(self, stream)

    def get_stream_height(self, stream):
        return _realsense.device_get_stream_height(self, stream)

    def get_stream_format(self, stream):
        return _realsense.device_get_stream_format(self, stream)

    def get_stream_framerate(self, stream):
        return _realsense.device_get_stream_framerate(self, stream)

    def get_stream_intrinsics(self, stream):
        return _realsense.device_get_stream_intrinsics(self, stream)

    def get_motion_intrinsics(self):
        return _realsense.device_get_motion_intrinsics(self)

    def set_frame_callback(self, stream, frame_handler):
        return _realsense.device_set_frame_callback(self, stream, frame_handler)

    def disable_motion_tracking(self):
        return _realsense.device_disable_motion_tracking(self)

    def is_motion_tracking_active(self):
        return _realsense.device_is_motion_tracking_active(self)

    def start(self, *args):
        return _realsense.device_start(self, *args)

    def stop(self, *args):
        return _realsense.device_stop(self, *args)

    def is_streaming(self):
        return _realsense.device_is_streaming(self)

    def get_option_range(self, *args):
        return _realsense.device_get_option_range(self, *args)

    def get_options(self, options, count, values):
        return _realsense.device_get_options(self, options, count, values)

    def set_options(self, options, count, values):
        return _realsense.device_set_options(self, options, count, values)

    def get_option(self, option):
        return _realsense.device_get_option(self, option)

    def get_option_description(self, option):
        return _realsense.device_get_option_description(self, option)

    def set_option(self, option, value):
        return _realsense.device_set_option(self, option, value)

    def wait_for_frames(self):
        return _realsense.device_wait_for_frames(self)

    def poll_for_frames(self):
        return _realsense.device_poll_for_frames(self)

    def supports_capability(self, capability):
        return _realsense.device_supports_capability(self, capability)

    def supports_parameter(self, info_param):
        return _realsense.device_supports_parameter(self, info_param)

    def get_frame_timestamp(self, stream):
        return _realsense.device_get_frame_timestamp(self, stream)

    def get_frame_number(self, stream):
        return _realsense.device_get_frame_number(self, stream)

    def send_blob_to_device(self, type, data, size):
        return _realsense.device_send_blob_to_device(self, type, data, size)

    def get_frame_data_u8(self, stream):
        return _realsense.device_get_frame_data_u8(self, stream)

    def get_frame_data_u16(self, stream):
        return _realsense.device_get_frame_data_u16(self, stream)

    def get_frame_data_f32(self, stream):
        return _realsense.device_get_frame_data_f32(self, stream)
device_swigregister = _realsense.device_swigregister
device_swigregister(device)


_realsense.log_severity_debug_swigconstant(_realsense)
log_severity_debug = _realsense.log_severity_debug

_realsense.log_severity_info_swigconstant(_realsense)
log_severity_info = _realsense.log_severity_info

_realsense.log_severity_warn_swigconstant(_realsense)
log_severity_warn = _realsense.log_severity_warn

_realsense.log_severity_error_swigconstant(_realsense)
log_severity_error = _realsense.log_severity_error

_realsense.log_severity_fatal_swigconstant(_realsense)
log_severity_fatal = _realsense.log_severity_fatal

_realsense.log_severity_none_swigconstant(_realsense)
log_severity_none = _realsense.log_severity_none

def apply_depth_control_preset(device, preset):
    return _realsense.apply_depth_control_preset(device, preset)
apply_depth_control_preset = _realsense.apply_depth_control_preset

def apply_ivcam_preset(device, preset):
    return _realsense.apply_ivcam_preset(device, preset)
apply_ivcam_preset = _realsense.apply_ivcam_preset
# This file is compatible with both classic and new-style classes.


